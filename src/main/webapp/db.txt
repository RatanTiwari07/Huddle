-- Create the database
CREATE DATABASE IF NOT EXISTS `shopping-cart`;

-- Use the database
USE `shopping-cart`;

-- Product table
CREATE TABLE product (
    pid VARCHAR(45),
    pname VARCHAR(100),
    ptype VARCHAR(20),
    pinfo VARCHAR(350),
    pprice DECIMAL(12,2),
    pquantity INT,
    image LONGBLOB,
    PRIMARY KEY (pid)
);

-- User table
CREATE TABLE user (
    email VARCHAR(60),
    name VARCHAR(30),
    mobile BIGINT,
    address VARCHAR(250),
    pincode INT,
    password VARCHAR(20),
    PRIMARY KEY (email)
);

-- Transactions table (each transaction = one orderId / multiple items)
CREATE TABLE transactions (
    transid VARCHAR(45),
    username VARCHAR(60),
    time DATETIME,
    amount DECIMAL(10,2),
    PRIMARY KEY (transid),
    INDEX truserid_idx (username),
    CONSTRAINT fk_transactions_user FOREIGN KEY (username) REFERENCES user(email)
);

-- Orders table (linked to transactions)
CREATE TABLE orders (
    orderid VARCHAR(45),
    prodid VARCHAR(45),
    quantity INT,
    amount DECIMAL(10,2),
    shipped INT,
    PRIMARY KEY (orderid, prodid),
    INDEX productid_idx (prodid),
    CONSTRAINT fk_orders_prodid FOREIGN KEY (prodid) REFERENCES product(pid),
    CONSTRAINT fk_orders_transid FOREIGN KEY (orderid) REFERENCES transactions(transid)
);

-- User Demand table
CREATE TABLE user_demand (
    username VARCHAR(60) NOT NULL,
    prodid VARCHAR(45),
    quantity INT,
    PRIMARY KEY (prodid),
    INDEX prodid_idx (prodid),
    CONSTRAINT fk_user_demand_user FOREIGN KEY (username) REFERENCES user(email),
    CONSTRAINT fk_user_demand_product FOREIGN KEY (prodid) REFERENCES product(pid)
);

-- User Cart table
CREATE TABLE usercart (
    username VARCHAR(60),
    prodid VARCHAR(45),
    quantity INT,
    INDEX useremail_idx (username),
    INDEX prodidcart_idx (prodid),
    CONSTRAINT fk_usercart_user FOREIGN KEY (username) REFERENCES user(email),
    CONSTRAINT fk_usercart_product FOREIGN KEY (prodid) REFERENCES product(pid)
);

-- Admin table
CREATE TABLE admin (
    name VARCHAR(100),
    address VARCHAR(255),
    email VARCHAR(60) PRIMARY KEY,
    password VARCHAR(60)
);

-- Comments table
CREATE TABLE comments (
    email VARCHAR(60),
    comment TEXT,
    comment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (email) REFERENCES user(email) ON DELETE CASCADE
);
